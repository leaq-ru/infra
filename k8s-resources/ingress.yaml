apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-web
  namespace: leaq
  annotations:
    kubernetes.io/ingress.class: nginx-2
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/hsts: "false"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/limit-connections: "5"
    nginx.ingress.kubernetes.io/limit-rpm: "180"
spec:
  rules:
    - host: leaq.ru
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: web
                port:
                  number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: leaq
  annotations:
    kubernetes.io/ingress.class: nginx-2
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/limit-connections: "5"
    nginx.ingress.kubernetes.io/limit-rpm: "180"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
    - hosts:
        - api.leaq.ru
        - admin-bot.leaq.ru
      secretName: leaq-tls
  rules:
    - host: api.leaq.ru
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: api
                port:
                  number: 80
    - host: admin-bot.leaq.ru
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: admin-bot
                port:
                  number: 80
